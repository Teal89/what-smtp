{"version":3,"sources":["components/Input.js","components/CardSmall.js","views/Home.js","components/Sidebar.js","components/CardLarge.js","views/Results.js","components/Nav.js","components/Head.js","components/Email.js","App.js","serviceWorker.js","index.js"],"names":["getSuggestions","value","inputValue","trim","toLowerCase","length","Object","keys","codes","filter","code","split","join","indexOf","getSuggestionValue","suggestion","Input","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","setState","target","renderSuggestion","_this$props$home","home","react_default","a","createElement","Link","className","to","pathname","state","key","category","onSuggestionsFetchRequested","_ref","suggestions","onSuggestionsClearRequested","onSuggestionSelected","event","_ref2","onSuggestionSelect","_this$state","inputProps","placeholder","onChange","dist_default","focusInputOnSuggestionClick","Component","CardSmall","title","list","map","item","idx","concat","Home","Grid","Row","Col","sm","components_Input","class","components_CardSmall","sidebarContent","error","tools","bestPractices","Sidebar","renderContent","CardLarge","para1","para2","formattedTitle","charAt","toUpperCase","slice","Results","handleSuggestionSelect","location","obj","Fragment","fluid","components_Sidebar","components_CardLarge","Nav","Head","Email","href","role","App","components_Nav","components_Head","BrowserRouter","Switch","Route","exact","component","path","components_Email","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a498cca7.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport Autosuggest from 'react-autosuggest';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport codes from '../codes';\r\n\r\nconst getSuggestions = value => {\r\n  const inputValue = value.trim().toLowerCase();\r\n  const inputValueLen = inputValue.length;\r\n\r\n  return inputValueLen === 0\r\n    ? []\r\n    : Object.keys(codes).filter(\r\n        code =>\r\n          code\r\n            .split('_')\r\n            .join(' ')\r\n            .toLowerCase()\r\n            .indexOf(inputValue) > -1,\r\n      );\r\n};\r\n\r\nconst getSuggestionValue = suggestion => suggestion;\r\n\r\nclass Input extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      suggestions: [],\r\n      value: props.value || '',\r\n    };\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({ value: e.target.value });\r\n  };\r\n\r\n  renderSuggestion = suggestion => {\r\n    const { home = false } = this.props;\r\n    const value = suggestion\r\n      .split('_')\r\n      .join(' ')\r\n      .toLowerCase();\r\n    if (home) {\r\n      return (\r\n        <Link\r\n          className=\"suggestion\"\r\n          to={{\r\n            pathname: '/results',\r\n            state: { value: value, key: suggestion, category: 'error' },\r\n          }}\r\n        >\r\n          {value}\r\n        </Link>\r\n      );\r\n    }\r\n\r\n    return <div className=\"suggestion\">{value}</div>;\r\n  };\r\n\r\n  onSuggestionsFetchRequested = ({ value }) => {\r\n    this.setState({\r\n      suggestions: getSuggestions(value),\r\n    });\r\n  };\r\n\r\n  onSuggestionsClearRequested = () => {\r\n    this.setState({\r\n      suggestions: [],\r\n    });\r\n  };\r\n\r\n  onSuggestionSelected = (event, { suggestion }) => {\r\n    this.setState({\r\n      value: suggestion\r\n        .split('_')\r\n        .join(' ')\r\n        .toLowerCase(),\r\n    });\r\n    this.props.onSuggestionSelect && this.props.onSuggestionSelect(suggestion);\r\n  };\r\n\r\n  render() {\r\n    const { value, suggestions } = this.state;\r\n    const inputProps = {\r\n      placeholder: 'type error code',\r\n      value,\r\n      onChange: this.handleChange,\r\n    };\r\n    return (\r\n      <div className=\"input-container\">\r\n        <Autosuggest\r\n          suggestions={suggestions}\r\n          onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\r\n          onSuggestionsClearRequested={this.onSuggestionsClearRequested}\r\n          onSuggestionSelected={this.onSuggestionSelected}\r\n          getSuggestionValue={getSuggestionValue}\r\n          renderSuggestion={this.renderSuggestion}\r\n          inputProps={inputProps}\r\n          focusInputOnSuggestionClick\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Input;\r\n","import React from 'react';\r\n\r\nimport './components.css';\r\n\r\nconst CardSmall = ({ title, list }) => {\r\n  return (\r\n    <div className=\"card-small\">\r\n      <div className=\"card-small-title\">{title}</div>\r\n      <ul className=\"card-small-list\">\r\n        {list.map((item, idx) => (\r\n          <li key={idx} className=\"card-small-list-item\">{`* ${item}`}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardSmall;\r\n","import React, { Component } from 'react';\r\nimport { Grid, Row, Col } from 'react-bootstrap';\r\n\r\nimport './views.css';\r\nimport Input from '../components/Input';\r\nimport CardSmall from '../components/CardSmall';\r\n\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <Grid>\r\n        <Row>\r\n          <Col sm={12}>\r\n            <Input home />\r\n          </Col>\r\n        </Row>\r\n        <div class=\"container-cards\">\r\n        <div class=\"jumbotron jumbotron-fluid\">\r\n          <h3>Other Resources</h3>\r\n        <Row className=\"card-row\">\r\n          <Col sm={4}>\r\n            <CardSmall\r\n              title=\"Deliverability Resources\"\r\n              list={['Warming up domains', 'Improving domain reputation']}\r\n            />\r\n          </Col>\r\n          <Col sm={4}>\r\n            <CardSmall\r\n              title=\"Best Practices\"\r\n              list={['Sending password reset email', 'User invitations']}\r\n            />\r\n          </Col>\r\n          <Col sm={4}>\r\n            <CardSmall\r\n              title=\"Email Providers\"\r\n              list={['Evaluating service providers', 'Postmark']}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        </div>\r\n        </div>\r\n      </Grid>\r\n\r\n\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n\r\n\r\n","import React from 'react';\r\n\r\nimport './components.css';\r\n\r\nconst sidebarContent = {\r\n  error: 'Error Codes',\r\n  tools: 'Tools',\r\n  bestPractices: 'Best Practices',\r\n};\r\n\r\nconst renderContent = category => {\r\n  const filteredContent = Object.keys(sidebarContent).filter(\r\n    key => key !== category,\r\n  );\r\n  return filteredContent.map(key => {\r\n    return (\r\n      <div key={key} className=\"sidebar-item\">\r\n        {sidebarContent[key]}\r\n      </div>\r\n    );\r\n  });\r\n};\r\n\r\nconst Sidebar = ({ category }) => {\r\n  return <div className=\"sidebar\">{renderContent(category)}</div>;\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\n\r\nimport './components.css';\r\n\r\nconst CardLarge = ({ title, para1, para2 }) => {\r\n  const formattedTitle = `${title.charAt(0).toUpperCase()}${title.slice(\r\n    1,\r\n    title.length,\r\n  )}`;\r\n  return (\r\n    <div className=\"card-large\">\r\n      <div className=\"card-large-title card-large-title-main\">\r\n        {formattedTitle}\r\n      </div>\r\n      <div className=\"content\">\r\n        <div className=\"card-large-title\">What this means?</div>\r\n        <div className=\"card-large-para\">{para1}</div>\r\n        <div className=\"card-large-title card-large-title-last\">\r\n          How to fix?\r\n        </div>\r\n        <div className=\"card-large-para\">{para2}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardLarge;\r\n","import React, { Component } from 'react';\r\nimport { Grid, Row, Col } from 'react-bootstrap';\r\n\r\nimport './views.css';\r\nimport codes from '../codes';\r\nimport Input from '../components/Input';\r\nimport Sidebar from '../components/Sidebar';\r\nimport CardLarge from '../components/CardLarge';\r\n\r\nclass Results extends Component {\r\n  state = {\r\n    value: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ value: this.props.location.state.key });\r\n  }\r\n\r\n  handleSuggestionSelect = key => {\r\n    this.setState({ value: key });\r\n  };\r\n\r\n  render() {\r\n    const title = this.state.value\r\n      .split('_')\r\n      .join(' ')\r\n      .toLowerCase();\r\n    const key = this.state.value;\r\n    const obj = codes[key];\r\n    return (\r\n      <React.Fragment>\r\n        <Grid>\r\n          <Row>\r\n            <Col sm={12}>\r\n              <Input\r\n                value={this.props.location.state.value}\r\n                onSuggestionSelect={this.handleSuggestionSelect}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Grid>\r\n        <Grid fluid className=\"content-grid\">\r\n          <Row>\r\n            <Col sm={2}>\r\n              <Sidebar category={this.props.location.state.category} />\r\n            </Col>\r\n            <Col sm={8}>\r\n              <CardLarge\r\n                title={title}\r\n                para1={obj && obj['what_does_it_mean']}\r\n                para2={obj && obj['How_to_fix_it']}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Grid>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Results;\r\n","import React from 'react';\r\n\r\nimport './components.css';\r\n\r\n\r\n\r\nconst Nav = () => {\r\n  return (\r\n    <nav>\r\n      <h2>What the SMTP?</h2>\r\n      \r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import React from 'react';\n\nimport './components.css';\n\n\nconst Head = () => {\n  return (\n  \t<nav>\n      <h3>Troubleshoot error codes </h3>\n      <h3>without the fluff</h3>\n      </nav>\n      \n    \n  );\n};\n\nexport default Head;","import React from 'react';\n\nimport './components.css';\n\n\nconst Email = () => {\n  return (\n  \t   \n\n <div class=\"jumbotron jumbotron-fluid\">\n  <div class=\"container\">\n    <h1 class=\"display-4\">Write better emails</h1>\n    <p class=\"lead\">Get practical troubshooting and email tips right to your inbox...</p>\n    <a class=\"btn btn-primary\" href=\"http://www.google.com\" role=\"button\">Send em over</a>\n  </div>\n</div>\n\n\n      \n    \n  );\n};\n\nexport default Email;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport './App.css';\nimport Home from './views/Home';\nimport Results from './views/Results';\nimport Nav from './components/Nav';\nimport Head from './components/Head';\nimport Email from './components/Email';\nimport Tools from './components/Tools';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"main-container\">\n\n        <Nav />\n        <Head />\n        <Router>\n          <Switch>\n            <Route exact component={Home} path=\"/\" />\n            <Route component={Results} path=\"/results\" />\n          </Switch>\n        </Router>\n        <Email />\n      </div>\n      \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}